<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <!-- 由JMS厂商提供的, 生产 真正可以与MQ服务器连接的Connection的  ConnectionFactory -->
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <constructor-arg name="brokerURL" value="tcp://172.16.46.128:61616"/>
    </bean>
    <!-- spring用来管理各JMS厂商提供的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <constructor-arg name="targetConnectionFactory" ref="activeMQConnectionFactory"/>
    </bean>

    <!-- 配置生产者 -->
    <!-- Spring提供的工具类JMSTemplate,可以执行消息的发送/接收等 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <!-- 配置目的地的类型,队列目的地,点对点 -->
    <!--sms-->
    <bean id="testQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="testQueue"/>
    </bean>

    <!-- 消息监听器 -->
    <bean id="testMessageListener" class="com.nextyu.study.activemq.TestMessageListener">
        <!-- <property name="taskExecutor" ref="taskExecutor"/>-->
    </bean>
    <!-- 消息监听容器 -->
    <bean id="jmsContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="testQueue"/>
        <property name="messageListener" ref="testMessageListener"/>
    </bean>

    <!-- 配置线程池 -->
    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数 -->
        <property name="corePoolSize" value="3"/>
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="5"/>
        <!-- 队列最大长度 -->
        <property name="queueCapacity" value="3"/>
        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
        <property name="keepAliveSeconds" value="60"/>
        <!-- 当线程不够时,选择一种方式执行 -->

    </bean>

</beans>